
// export const signUp = async (values: z.infer<typeof signUpSchema>) => {
//     try {
//         // if user already exists, throw an error
//         const existingUser = await prisma.user.findUnique({
//             where: {
//                 email: values.email
//             }
//         })
//         if (existingUser) {
//             return { error: 'User already exists', success: false }
//         }

//         const hashedPassword = await new Argon2id().hash(values.password)

//         const user = await prisma.user.create({
//             data: {
//                 email: values.email.toLowerCase(),
//                 name: values.name,
//                 hashedPassword
//             }
//         })
//         const session = await lucia.createSession(user.id, {})
//         const sessionCookie = await lucia.createSessionCookie(session.id)
//             ; (await cookies()).set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes)
//         return { success: true }
//     } catch (error) {
//         return { error: 'Something went wrong', success: false }
//     }
// }



// export const logOut = async () => {
//     const sessionCookie = await lucia.createBlankSessionCookie()
//         ; (await cookies()).set(sessionCookie.name, sessionCookie.value, sessionCookie.attributes)
//     return redirect('/authenticate')
// }